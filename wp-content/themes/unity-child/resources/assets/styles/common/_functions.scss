// Rem-calc function from Zurb
@function strip-unit($num) {
  @return $num / ($num * 0 + 1);
}
@function convert-to-rem($value, $base-value: $rem-base) {
  $value: strip-unit($value) / strip-unit($base-value) * 1rem;

  @return $value;
}
@function rem-calc($values, $base-value: $rem-base) {
  $max: length($values);

  @if $max == 1 { @return convert-to-rem(nth($values, 1), $base-value); }

  $remValues: ();

  @for $i from 1 through $max {
    $remValues: append($remValues, convert-to-rem(nth($values, $i), $base-value));
  }

  @return $remValues;
}

// em-calc function modified from rem-calc
@function strip-unit($num) {
  @return $num / ($num * 0 + 1);
}
@function convert-to-em($value, $base-value: $em-base) {
  $value: strip-unit($value) / strip-unit($base-value) * 1em;

  @return $value;
}
@function em-calc($values, $base-value: $em-base) {
  $max: length($values);

  @if $max == 1 { @return convert-to-em(nth($values, 1), $base-value); }

  $emValues: ();

  @for $i from 1 through $max {
    $emValues: append($emValues, convert-to-em(nth($values, $i), $base-value));
  }

  @return $emValues;
}

// Image relative URL builder
@function image($file) {
  @return url($asset-base-path + '/' + $file);
}
